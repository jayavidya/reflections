How did viewing a diff between two versions of a file help you
see the bug that was introduced?
There was a typo in one line of the new file. Using diff, it was 
very easy to spot this typo, because the diff e ol clearly shows
the line-by-line difference between two files. It would have been 
more difficult to find this typo manually.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Having an easy access to different versions of a file has its own advantages. Sometimes I could see the previous version of a program
which had a better logic than the newer version; then I could fall 
back on the older version and work on the program. Without version control this would have been difficult. Therefore, version control 
helps in making proper changes to a program more efficient.

What do you think are the pros and cons of manually choosing when 
to create a commit, like you do in Git, vs having versions 
automatically saved, like Google docs does?
Using Git, I can create a commit when there is a cheange made which is large enough; but using Google docs, the commit is automatically created
even if there is a small change. Also Git allows us to create a commit for a given logical change; while Google docs may automatically create 
a commit even before a logical change is made or after several logical changes have been made, which is not desired.
The main disadvantage of using Git is that we have to think appropriately when to make a commit; while using Google docs, as 
the commits are created automatically, we need not bother about when 
to make a commit.

Why do you think some version control systems, like Git, allow saving 
multiple files in one commit, while others, like Google Docs, treat
each file separately?
Git allows saving multiple files in one commit because the files are mainly code files which are dependent on each other; the change made in 
one file requires a change to be made in another file.
But Google Docs treats each file separately, as the doc files are independent.

How can you use the commands git log and git diff to view the history
of files?
We move to the repository directory. when we issue the command git log, it displays all the commits, with each commit having a unique id. Each commit shows the update made in file. When we issue the command:
git diff first-id second-id, it dispalys the lines inserted and the lines deleted, also indication the number of insertions and deletions.
This helps us to easily analyze the changes made in the file.

How might using version control make you more confident to make changes
that could break something?
Using version control, I can go back to file that existed before the commit was made. So, if there is a mistake in the code-file, I can undo
the mistake, by using the command git checkout id. This way, I can be more confident to make changes that could break something, as the change may be undone in future. 

Now that you have your workspace set up,  what do you want to try using Git for?
I would like to use Git for controlling different versions of the Android application (SmartShield), which I'm currently working on.
