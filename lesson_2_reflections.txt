What happens when you initialize a repository? Why do you need to do it?
When I initialize a repository the file .git is created. This subdirectory contains all of the necessary metadata of the repo.

How is the staging area different from the working directory and the 
repository? What value do you think it offers?

Staging area consists of all the files that will go into your next commit.

The working directory is a singe checkout of one version of the project.These files are pulled out of the compressed database in the Git directory and placed on disk for you to use or modify.

The repository is where Git stores the metadata and the object database for your project,  and it is what is copied when you clone a repo from another computer.
////////
///////
How can you use the staging area to make sure you have one commit
per logical change?
Firstly, we add the required file to the staging area using the
command git add. Then we make the necessary logical change in the 
file and save. After this, we issue the command git commit.

What are some situations when branches would be helpful in keeping 
your history organized? How would branches help?
Sometimes we need to modify certain behaviour of our program, and at 
the same we would want to keep unmodified version of the program. We would like to have the modified version as well as the unmodified version of the program in the repository. Then branches would be helpful.